//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Server.CAService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CAService.ICA")]
    public interface ICA {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICA/JoinClient", ReplyAction="http://tempuri.org/ICA/JoinClientResponse")]
        string JoinClient(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICA/JoinClient", ReplyAction="http://tempuri.org/ICA/JoinClientResponse")]
        System.Threading.Tasks.Task<string> JoinClientAsync(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICA/JoinServer", ReplyAction="http://tempuri.org/ICA/JoinServerResponse")]
        string JoinServer(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICA/JoinServer", ReplyAction="http://tempuri.org/ICA/JoinServerResponse")]
        System.Threading.Tasks.Task<string> JoinServerAsync(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICA/RegistrateClient", ReplyAction="http://tempuri.org/ICA/RegistrateClientResponse")]
        string RegistrateClient(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICA/RegistrateClient", ReplyAction="http://tempuri.org/ICA/RegistrateClientResponse")]
        System.Threading.Tasks.Task<string> RegistrateClientAsync(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICA/RegistrateServer", ReplyAction="http://tempuri.org/ICA/RegistrateServerResponse")]
        string RegistrateServer(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICA/RegistrateServer", ReplyAction="http://tempuri.org/ICA/RegistrateServerResponse")]
        System.Threading.Tasks.Task<string> RegistrateServerAsync(string data);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICAChannel : Server.CAService.ICA, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CAClient : System.ServiceModel.ClientBase<Server.CAService.ICA>, Server.CAService.ICA {
        
        public CAClient() {
        }
        
        public CAClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CAClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CAClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CAClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string JoinClient(string data) {
            return base.Channel.JoinClient(data);
        }
        
        public System.Threading.Tasks.Task<string> JoinClientAsync(string data) {
            return base.Channel.JoinClientAsync(data);
        }
        
        public string JoinServer(string data) {
            return base.Channel.JoinServer(data);
        }
        
        public System.Threading.Tasks.Task<string> JoinServerAsync(string data) {
            return base.Channel.JoinServerAsync(data);
        }
        
        public string RegistrateClient(string data) {
            return base.Channel.RegistrateClient(data);
        }
        
        public System.Threading.Tasks.Task<string> RegistrateClientAsync(string data) {
            return base.Channel.RegistrateClientAsync(data);
        }
        
        public string RegistrateServer(string data) {
            return base.Channel.RegistrateServer(data);
        }
        
        public System.Threading.Tasks.Task<string> RegistrateServerAsync(string data) {
            return base.Channel.RegistrateServerAsync(data);
        }
    }
}
